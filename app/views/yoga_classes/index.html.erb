    <%= render partial: "partials/header", locals: {
    current_user: @current_user,
    is_angular: true
     } %>  
   <div ng-app="app" ng-controller="yogaClassesCtrl" ng-init="setup()">


    <!-- wrapper -->
    <div id="wrapper">

      <!-- 
        PAGE HEADER 
        
        CLASSES:
          .page-header-xs = 20px margins
          .page-header-md = 50px margins
          .page-header-lg = 80px margins
          .page-header-xlg= 130px margins
          .dark     = dark page header

          .shadow-before-1  = shadow 1 header top
          .shadow-after-1   = shadow 1 header bottom
          .shadow-before-2  = shadow 2 header top
          .shadow-after-2   = shadow 2 header bottom
          .shadow-before-3  = shadow 3 header top
          .shadow-after-3   = shadow 3 header bottom
      -->
      <section class="page-header static">
        <div class="container">
          <br><br>
          
          <h1>UPCOMING YOGA CLASSES
          <% if params[:search] %> NEAR:</h1>
          <h2><%= params[:search] %></h2>
          <% end %>
          <!-- breadcrumbs -->
          <ol class="breadcrumb">
            <li></li>
          </ol><!-- /breadcrumbs -->

        </div>
      </section>
      <!-- /PAGE HEADER -->




      <!-- -->
      <section>
        <div class="container">
          <div class="row">

            <!-- LEFT COLUMNS -->
            <div class="col-md-4 col-sm-4">

              <!-- SEARCH RESULTS -->
              <div ng-repeat="yoga_class in yogaClasses | filter: {studio_name: studioFilter} | filter: {start: dateFilter} | filter: {name: nameFilter} | filter: lessThan('price', maxPrice)">
                <div class="clearfix search-result">
                <h4 class="margin-bottom-0"><%= link_to "{{yoga_class.name}}", "/yoga_classes/{{yoga_class.id}}"%></h4>
                <small class="text-muted"><%= link_to "{{yoga_class.studio_name}}", "/studios/{{yoga_class.studio_id}}" %></small>
                <img src="/assets/images/logos/yoga-logo.jpg" alt="" height="60" />
                <p>{{ yoga_class.parsed_date }}</p>
                <p>{{ yoga_class.parsed_time }}</p>
                </div>
              </div>



              <!-- /SEARCH RESULTS -->

              <!-- PAGINATION -->
              <div class="text-center margin-top-60">
                <ul class="pagination">
                  <li class="disabled"><a href="#">Previous</a></li>
                  <li class="active"><a href="#">1</a></li>
                  <li><a href="#">2</a></li>
                  <li><a href="#">3</a></li>
                  <li><a href="#">Next</a></li>
                </ul>
              </div>
              <!-- /PAGINATION -->
            </div>
            <!-- /LEFT COLUMNS -->

            <!-- MAP COLUMNS -->
            <div class="col-md-5 col-sm-5 top-center">             
            <div id="map"></div>
            </div>
            <!-- /MAP COLUMNS -->


            <!-- RIGHT COLUMNS -->
            <div class="col-md-3 col-sm-3">
              <h4>FILTERS</h4>

              <form action="page-search-result-1.html" method="get">
                <input type="text" value="" class="form-control" placeholder="Search for class names" ng-model="nameFilter" />

                <input type="text" value="" class="form-control" placeholder="Search for studio names" ng-model="studioFilter" />

                <input type="text" class="form-control datepicker" data-format="yyyy-mm-dd" data-lang="en" data-RTL="false" placeholder="  Find classes by date" name="date" ng-model="dateFilter">
                <!-- value="<%= Time.now.strftime("%A, %b %d, %Y") %>" -->

                <label class="size-12 margin-top-10">Style</label>
                <select class="form-control">
                  <option value="">All</option>
                  <option value="">Ashtanga</option>
                  <option value="">Bikram</option>
                  <option value="">Hatha</option>
                  <option value="">Vinyasa</option>
                  <option value="">Yin</option>
                </select>

                <label class="size-12 margin-top-10">Level</label>
                <select class="form-control">
                  <option value="">All</option>
                  <option value="">Beginner</option>
                  <option value="">Intermediate</option>
                  <option value="">Advanced</option>
                  <option value="">Open</option>
                </select>

                <label class="size-12 margin-top-10">Price</label>
                <select class="form-control" ng-model="maxPrice">
                  <option value="100">All</option>
                  <option value="0">0</option>
                  <option value="3">3</option>
                  <option value="10">10</option>
                  <option value="15">15</option>
                  <option value="20">20</option>
                  <option value="25">25</option>
                  <option value="30">30</option>
                </select>

                <input type="number" step="1" ng-model="numLimit">

                <div class="margin-bottom-40">
                  <div class="margin-bottom-10">
                    <label for="amount">Maximum price:</label>
                    <input type="hidden" name="amount" id="amount" class="form-control" value="{{ maxPrice }}"> <!-- hidden input -->
                  </div>           
                  <div class="slider-wrapper success-slider">
                    <div id="slider2" value="{{ maxPrice }}"></div>
                  </div>
                </div>

              </form>
{{ maxPrice }}
{{ numLimit }}
              <hr />


            </div>
            <!-- /RIGHT COLUMNS -->

        </div>
      </section>
      </div>
      <!-- / -->
<script src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript">
  var locations = [
    [
        "Moksha Yoga Center - Lakeview",
        41.942646,
        -87.6531469999999,
        1,
        "Georgia Mason",
        "",
        "Norfolk Botanical Gardens, 6700 Azalea Garden Rd.",
        "coming soon"
    ],
    [
        "Grandpa's House",
        41.8409724,
        -87.6441382999999,
        2,
        "Terry Cox-Joseph",
        "Rowena's",
        "758 W. 22nd Street in front of Rowena's",
        "found"
    ],
    [
        "SOSCVI",
        41.8784244,
        -87.6344896999999,
        3,
        "Steven F. Morris",
        "Judy Boone Realty",
        "Norfolk City Library - Pretlow Branch, 9640 Granby St.",
        "found"
    ],
    [
        "Pecatonica",
        42.3100,
        -89.3586,
        4,
        "Steven F. Morris",
        "Judy Boone Realty",
        "Norfolk City Library - Pretlow Branch, 9640 Granby St.",
        "found"
    ]
]

    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 11,
      center: new google.maps.LatLng(41.8369, -87.6847),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var infowindow = new google.maps.InfoWindow();

    var marker, i;

    for (i = 0; i < locations.length; i++) {  
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });

      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i][0], locations[i][6]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }

    //create empty LatLngBounds object
    var bounds = new google.maps.LatLngBounds();
    var infowindow = new google.maps.InfoWindow();    

    for (i = 0; i < locations.length; i++) {  
      var marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });

    //extend the bounds to include each marker's position
    bounds.extend(marker.position);

    google.maps.event.addListener(marker, 'click', (function(marker, i) {
      return function() {
        infowindow.setContent(locations[i][0]);
        infowindow.open(map, marker);
      }
    })(marker, i));
  }

//now fit the map to the newly inclusive bounds
    map.fitBounds(bounds);


</script>



    

